name: TestExecute Installation test
run-name: TestExecute run from GitHub Action (${{ github.actor }})
on:
  push:
    branches : ["CompleteInstallationandReport"]
  pull_request :
      branches : ["main"]
jobs:
  DownloadInstallAndRunTE:
    name: Install and Run TestExecute (${{ github.actor }})
    
    runs-on: 
       - self-hosted
       - lable-2

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Job Startup
        run: |
          echo "Starting job [Event=${{ github.event_name }}]"
          echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - name: Check if TestExecute is installed
        id: check_testexecute_installed
        run: |
          if (PATH_TE ${{ vars.TEST_EXECUTE_BIN }}) {
            echo "TestExecute is already installed."
            echo "##[set-output name=installed]true"
          } else {
            echo "TestExecute is not installed."
            echo "##[set-output name=installed]false"
          }
        shell: cmd
      - name: Download TestExecute
        if: ${{ steps.check_testexecute_installed.outputs.installed == 'false' }}
        run: |
          Invoke-WebRequest -Uri "${{ vars.TEST_EXECUTE_DOWNLOAD_URL }}" -o "./TestCompleteInstaller.exe"  
      - name: Show working folder content
        run: dir
        shell: cmd
      - name: Install TestExecute
        if: ${{ steps.check_testexecute_installed.outputs.installed == 'false' }}
        run: |
             .\TestCompleteInstaller.exe > output.txt /SilentInstall     
        shell : cmd
      - name : list the directory content
        run: |
            ls
            echo "Hence TestComplete Installed successfully"
      - name: Find TestComplete Installed files
        run : ls 'C:\Program Files (x86)\SmartBear\'
      - name: Env Variable for TestExecute bin folder
        run: set PATH_TE="${{ vars.TEST_EXECUTE_BIN }}"
        shell: cmd
      - name : Execute Test
        run: .\testrunner.bat ${{ secrets.TEST_EXECUTE_ACCESS_KEY }} ${{ inputs.project || 'AngularAutomation' }}
        shell: cmd
      - name: GitHub Action Summary
        if: always()
        run: |
         type summary.md | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
      
